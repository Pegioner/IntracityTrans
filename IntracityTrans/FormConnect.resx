<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>